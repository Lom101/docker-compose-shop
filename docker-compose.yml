services:
  web-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shop_web_api
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=${ConnectionStrings__DefaultConnection}
      - Logging__LogLevel__Default=${Logging__LogLevel__Default}
      - Logging__LogLevel__Microsoft_AspNetCore=${Logging__LogLevel__Microsoft_AspNetCore}
      - AllowedHosts=${AllowedHosts}
      - JwtConfig__Secret=${JwtConfig__Secret}
      - Stripe__SecretKey=${Stripe__SecretKey}
      - Stripe__PublishableKey=${Stripe__PublishableKey}
      - SmtpServerSettings__SmtpServer=${SmtpServerSettings__SmtpServer}
      - SmtpServerSettings__Port=${SmtpServerSettings__Port}
      - SmtpServerSettings__Username=${SmtpServerSettings__Username}
      - SmtpServerSettings__Password=${SmtpServerSettings__Password}
      - SmtpServerSettings__EnableSsl=${SmtpServerSettings__EnableSsl}
    depends_on:
      - db
    networks:
      - dev
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args: 
        # Передача аргументов на этапе сборки
        REACT_APP_API_URL: ${REACT_APP_API_URL} 
        REACT_APP_STRIPE_PUBLIC_KEY: ${REACT_APP_STRIPE_PUBLIC_KEY}
        REACT_APP_YANDEX_API_KEY: ${REACT_APP_YANDEX_API_KEY}
    container_name: shop_frontend
    ports:
      - "80:80"
    environment:
	    # Передача переменных окружения в контейнер(необязательно так как на этапе сборки уже переданы)
      - REACT_APP_API_URL=${REACT_APP_API_URL}  
      - REACT_APP_STRIPE_PUBLIC_KEY=${REACT_APP_STRIPE_PUBLIC_KEY}
      - REACT_APP_YANDEX_API_KEY=${REACT_APP_YANDEX_API_KEY}
    networks:
      - dev
    restart: always

  db:
    image: postgres:latest
    container_name: shop_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev
    restart: always
  
volumes:
  postgres_data:

networks:
  dev:
    driver: bridge
